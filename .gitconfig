[alias]
	# View abbreviated SHA, description, and history graph of the latest 20 commits
	l = !"git --no-pager log --pretty=format:\"%C(yellow)%h %C(cyan)%ad %Cblue%aN%C(auto)%d %Creset%s\" -n 15 --graph --date=relative"

	# View the current working tree status using the short format
	s = status -s

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat" 

	# Fetch and then rebase with origin/main
	frm = !"git fetch --all --prune --jobs=10 && git rebase origin/main"

  	# Fixup changes
  	fixup = "!f() { TARGET=$(git rev-parse "$1"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"

	# Commit all changes
	ca = !git add -A && git commit -av

	# Show verbose output about tags, branches or remotes
	branches = branch -a
	remotes = remote -v
	tags = tag -l

[user]
	name = Yan Yi Goh

[core]
	excludesfile = ~/.gitignore
	pager = delta

[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true

[commit]
	template = ~/.stCommitMsg

[color]
  # Use colors in Git commands that are capable of colored output when
  # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
  ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[url "git@gitlab.com:"]
	insteadOf = https://gitlab.com/

[url "git@github.com:"]
	insteadOf = https://github.com/

[init]
	defaultBranch = main

[delta]
	plus-style = "syntax #005700"
	minus-style = "syntax #420000"

[interactive]
	diffFilter = delta --color-only
